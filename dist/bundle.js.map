{"version":3,"file":"bundle.js","sources":["../src/core/vnode.js","../src/util/hash.js","../src/core/css.js","../index.js"],"sourcesContent":["const unicodeRegExp = /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z${unicodeRegExp.source}]*`\nconst commentReg = /^<!\\\\--/\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\nconst startTagOpen = new RegExp(`^<${qnameCapture}`)\nconst startTagClose = /^\\s*(\\/?)>/\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)\nconst dynamicArgAttribute = /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+\\][^\\s\"'<>\\\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\nconst attribute = /^\\s*([^\\s\"'<>\\\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\nconst conditionalComment = /^<!\\[/\nconst reCache = {}\nconst isPlainTextElement = makeMap('script,style,textarea', true)\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  const map = Object.create(null)\n  const list = str.split(',')\n  for (let i = 0; i < list.length; i++) {\n    map[list[i]] = true\n  }\n  return expectsLowerCase\n    ? val => map[val.toLowerCase()]\n    : val => map[val]\n}\n\nconst createASTElement = (tag, attrs, parent) => {\n  return {\n    type: 1,\n    tag,\n    attrsList: attrs,\n    rawAttrsMap: {},\n    parent,\n    children: []\n  }\n}\nfunction vnode (html, hashCode) {\n  let currentParent\n  let root\n  const stack = []\n  function closeElement (element) {\n    if (!currentParent) return\n    currentParent.children.push(element)\n    element.parent = currentParent\n  }\n  function start (tag, attrs, unary, start, end) {\n    const element = createASTElement(tag, attrs, currentParent)\n    if (!root) {\n      element.hashCode = hashCode\n      root = element\n    }\n    if (!element.hashCode) {\n      element.hashCode = root.hashCode\n    }\n    currentParent = element\n\n    stack.push(element)\n  }\n  function chars (text, start, end) {\n    const children = currentParent.children\n    if (text) {\n      let child\n      if (text !== ' ') {\n        child = {\n          type: 2,\n          expression: text,\n          tokens: text,\n          text\n        }\n      } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n        child = {\n          type: 3,\n          text\n        }\n      }\n      if (child) {\n        children.push(child)\n      }\n    }\n  }\n  function end (tag, start, end) {\n    // 子\n    const element = stack[stack.length - 1]\n    stack.length -= 1\n    // 父\n    currentParent = stack[stack.length - 1]\n    closeElement(element)\n  }\n  function comment (text, start, end) {\n    if (currentParent) {\n      const child = {\n        type: 3,\n        text,\n        isComment: true\n      }\n      currentParent.children.push(child)\n    }\n  }\n  function parse (html, options) {\n    const stack = []\n    let lastTag\n    let index = 0\n\n    while (html) {\n      if (!lastTag || !isPlainTextElement(lastTag)) {\n        let textEnd = html.indexOf('<')\n        if (textEnd === 0) {\n          if (commentReg.test(html)) {\n            const commentEnd = html.indexOf('-->')\n            if (commentEnd >= 0) {\n              options.comment(html.substring(4, commentEnd), index, index + commentEnd + 3)\n              advance(commentEnd + 3)\n              continue\n            }\n          }\n          const endTagMatch = html.match(endTag)\n          if (endTagMatch) {\n            const curIndex = index\n            advance(endTagMatch[0].length)\n            parseEndTag(endTagMatch[1], curIndex, index)\n            continue\n          }\n\n          const startTagMatch = parseStartTag()\n          if (startTagMatch) {\n            handleStartTag(startTagMatch)\n            continue\n          }\n        }\n        let text, rest, next\n        if (textEnd >= 0) {\n          rest = html.slice(textEnd)\n          while (!endTag.test(rest) &&\n              !startTagOpen.test(rest) &&\n              !comment.test(rest) &&\n              !conditionalComment.test(rest)) {\n            next = rest.indexOf('<', 1)\n            if (next < 0) break\n            textEnd += next\n            rest = html.slice(textEnd)\n          }\n          text = html.substring(0, textEnd)\n        }\n        if (textEnd < 0) {\n          text = html\n        }\n\n        if (text) {\n          advance(text.length)\n        }\n        options.chars(text, index - text.length, index)\n      } else {\n        let endTagLength = 0\n        const stackedTag = lastTag.toLowerCase()\n        const reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'))\n        const rest = html.replace(reStackedTag, function (all, text, endTag) {\n          endTagLength = endTag.length\n          options.chars(text)\n          return ''\n        })\n        index += html.length - rest.length\n        html = rest\n        parseEndTag(stackedTag, index - endTagLength, index)\n      }\n    }\n    console.log(stack, html, index, reCache)\n\n    function advance (n) {\n      index += n\n      html = html.substring(n)\n    }\n    function parseEndTag (tagName, start, end) {\n      let pos, lowerCasedTagName\n      if (start == null) start = index\n      if (end == null) end = index\n\n      // Find the closest opened tag of the same type\n      if (tagName) {\n        lowerCasedTagName = tagName.toLowerCase()\n        for (pos = stack.length - 1; pos >= 0; pos--) {\n          if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n            break\n          }\n        }\n      } else {\n        // If no tag name is provided, clean shop\n        pos = 0\n      }\n\n      if (pos >= 0) {\n        for (let i = stack.length - 1; i >= pos; i--) {\n          options.end(stack[i].tag, start, end)\n        }\n        stack.length = pos\n        lastTag = pos && stack[pos - 1].tag\n      }\n    }\n    function parseStartTag () {\n      const start = html.match(startTagOpen)\n      if (start) {\n        const match = {\n          tagName: start[1],\n          attrs: [],\n          start: index\n        }\n        advance(start[0].length)\n        let end, attr\n        while (!(end = html.match(startTagClose)) && (attr = html.match(dynamicArgAttribute) || html.match(attribute))) {\n          attr.start = index\n          advance(attr[0].length)\n          attr.end = index\n          match.attrs.push(attr)\n        }\n        if (end) {\n          match.unarySlash = end[1]\n          advance(end[0].length)\n          match.end = index\n          return match\n        }\n      }\n    }\n    function handleStartTag (match) {\n      const tagName = match.tagName\n      const l = match.attrs.length\n      const attrs = new Array(l)\n      for (let i = 0; i < l; i++) {\n        const args = match.attrs[i]\n        const value = args[3] || args[4] || args[5] || ''\n        attrs[i] = {\n          name: args[1],\n          value: value\n        }\n      }\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs, start: match.start, end: match.end })\n      lastTag = tagName\n      options.start(tagName, attrs, false, match.start, match.end)\n    }\n  }\n\n  parse(html, { start, end, chars, comment })\n  console.log('root', root)\n  return root\n}\n// export default vnode\n// const html = '<div class=\"test\"><span>hello world</span></div>'\n// const root = vnode(html)\n// console.log(root)\n\nexport default vnode\n","// 产生一个hash值，只有数字，规则和java的hashcode规则相同\nfunction hashCode (str) {\n  let h = 0\n  const len = str.length\n  const t = 2147483648\n  for (let i = 0; i < len; i++) {\n    h = 31 * h + str.charCodeAt(i)\n    if (h > 2147483647) h %= t // java int溢出则取模\n  }\n  /* var t = -2147483648 * 2;\n   while (h > 2147483647) {\n   h += t\n   }*/\n  return h\n}\n\n// 时间戳来自客户端，精确到毫秒，但仍旧有可能在在多线程下有并发，\n// 尤其hash化后，毫秒数前面的几位都不变化，导致不同日期hash化的值有可能存在相同，\n// 因此使用下面的随机数函数，在时间戳上加随机数，保证hash化的结果差异会比较大\n/*\n ** randomWord 产生任意长度随机字母数字组合\n ** randomFlag-是否任意长度 min-任意长度最小位[固定位数] max-任意长度最大位\n ** 用法  randomWord(false,6);规定位数 flash\n *      randomWord(true,3，6);长度不定，true\n * arr变量可以把其他字符加入，如以后需要小写字母，直接加入即可\n */\nfunction randomWord (randomFlag, min, max) {\n  let str = ''\n  let range = min\n  const arr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']\n  // 随机产生\n  if (randomFlag) {\n    range = Math.round(Math.random() * (max - min)) + min\n  }\n  for (let i = 0; i < range; i++) {\n    const pos = Math.round(Math.random() * (arr.length - 1))\n    str += arr[pos]\n  }\n  return str\n}\n// 获取hashcode\nfunction getHashCode () {\n  // 定义一个时间戳，计算与1970年相差的毫秒数  用来获得唯一时间\n  const timestamp = (new Date()).valueOf()\n  const myRandom = randomWord(false, 6)\n  const hashcode = hashCode(myRandom + timestamp.toString())\n  return hashcode\n}\n\nexport default getHashCode\n","function tokenize (cssString, hashCode) {\n  const lines = cssString.trim().split(/\\n/)\n  // eslint-disable-next-line array-callback-return\n  const tokens = lines.reduce((tokens, line) => {\n    const spaces = line.match(/^\\s+/) || ['']\n    const indent = spaces[0].length\n    const input = line.trim()\n    let words = input.split(/:/)\n    let firstWord = words.shift()\n    // eslint-ignore\n    const selectorReg = /([0-9a-zA-Z-.#\\[\\]]+)\\{$/\n    if (words.length === 0) {\n      const result = firstWord.match(selectorReg)\n      if (result) {\n        tokens.push({\n          type: 'selector',\n          value: result[1] + `[data-g-${hashCode}]`,\n          indent\n        })\n      }\n    } else {\n      const type = 'property'\n      tokens.push({\n        type,\n        value: firstWord,\n        indent\n      })\n      // eslint-disable-next-line no-cond-assign\n      while (firstWord = words.shift()) {\n        firstWord = firstWord.trim()\n        const values = firstWord.split(/\\s/)\n        if (values.length > 1) {\n          words = values\n          continue\n        }\n        firstWord = firstWord.replace(/;/, '')\n        tokens.push({\n          type: 'value',\n          value: firstWord,\n          indent: 0\n        })\n      }\n    }\n    return tokens\n    // eslint-disable-next-line no-cond-assign\n  }, [])\n  console.log(tokens)\n  return tokens\n}\nfunction cssParse (cssString, hashCode) {\n  const tokens = tokenize(cssString, hashCode)\n  const ast = { // 定义一个抽象语法树AST对象\n    type: 'root', // 根节点\n    value: 'root',\n    children: [],\n    rules: [],\n    indent: -1\n  }\n  const path = [ast] // 将抽象语法树对象放到数组中，即当前解析路径，最后一个元素为父元素\n  let parentNode = ast // 将当前根节点作为父节点\n  let token\n  const variableDict = {} // 保存定义的变量字典\n  // 遍历所有的token\n  // eslint-disable-next-line no-cond-assign\n  while (token = tokens.shift()) {\n    if (token.type === 'variableDef') { // 如果这个token是变量定义\n      if (tokens[0] && tokens[0].type === 'value') { // 并且如果其下一个token的类型是值定义，那么这两个token就是变量的定义\n        const variableValueToken = tokens.shift() // 取出包含变量值的token\n        variableDict[token.value] = variableValueToken.value // 将变量名和遍历值放到vDict对象中\n      }\n      continue\n    }\n\n    if (token.type === 'selector') { // 如果是选择器\n      const selectorNode = { // 创建一个选择器节点，然后填充children和rules即可\n        type: 'selector',\n        value: token.value,\n        indent: token.indent,\n        rules: [],\n        children: []\n      }\n      if (selectorNode.indent > parentNode.indent) { // 当前节点的缩进大于其父节点的缩进，说明当前选择器节点是父节点的子节点\n        path.push(selectorNode) // 将当前选择器节点加入到path中，路径变长了，当前选择器节点作为父节点\n        parentNode.children.push(selectorNode) // 将当前选择器对象添加到父节点的children数组中\n        parentNode = selectorNode // 当前选择器节点作为父节点\n      } else { // 缩进比其父节点缩进小，说明是非其子节点，可能是出现了同级的节点\n        parentNode = path.pop() // 移除当前路径的最后一个节点\n        while (token.indent <= parentNode.indent) { // 同级节点\n          parentNode = path.pop() // 拿到其父节点的父节点\n        }\n        // 找到父节点后，因为父节点已经从path中移除，所以还需要将父节点再次添加到path中\n        path.push(parentNode, selectorNode)\n        parentNode.children.push(selectorNode) // 找到父节点后，将当前选择器节点添加到父节点children中\n        parentNode = selectorNode // 当前选择器节点作为父节点\n      }\n    }\n\n    if (token.type === 'property') { // 如果是属性节点\n      if (token.indent > parentNode.indent) { // 如果该属性的缩进大于父节点的缩进，说明是父节点选择器的样式\n        parentNode.rules.push({ // 将样式添加到rules数组中 {property: \"border\", value:[]}\n          property: token.value,\n          value: [],\n          indent: token.indent\n        })\n      } else { // 非当前父节点选择器的样式\n        parentNode = path.pop() // 取出并移除最后一个选择器节点，拿到当前父节点\n        while (token.indent <= parentNode.indent) { // 与当前父节点的缩进比较，如果等于，说明与当前父节点同级，如果小于，则说明比当前父节点更上层\n          parentNode = path.pop() // 比当前父节点层次相等或更高，取出当前父节点的父节点，再次循环判其父节点，直到比父节点的缩进大为止\n        }\n        // 拿到了其父节点\n        parentNode.rules.push({ // 将该样式添加到其父选择器节点中\n          property: token.value,\n          value: [],\n          indent: token.indent\n        })\n        path.push(parentNode) // 由于父节点已从path中移除，需要再次将父选择器添加到path中\n      }\n      continue\n    }\n\n    if (token.type === 'value') { // 如果是值节点\n      // 拿到上一个选择器节点的rules中的最后一个rule的value将值添加进去\n      parentNode.rules[parentNode.rules.length - 1].value.push(token.value)\n      continue\n    }\n\n    if (token.type === 'variableRef') { // 如果是变量引用，从变量字典中取出值并添加到父节点样式的value数组中\n      parentNode.rules[parentNode.rules.length - 1].value.push(variableDict[token.value])\n      continue\n    }\n  }\n  return generate(transform(ast))\n}\nfunction transform (ast) {\n  const styles = [] // 存放要输出的每一条样式\n  function traverse (node, styles, selectorChain) {\n    if (node.type === 'selector') { // 如果是选择器节点\n      selectorChain = [...selectorChain, node.value] // 解析选择器层级关系，拿到选择器链\n      if (node.rules.length > 0) {\n        styles.push({\n          selector: selectorChain.join(' '),\n          rules: node.rules.reduce((rules, rule) => { // 遍历其rules, 拿到当前选择器下的所有样式\n            rules.push({ // 拿到该样式规则的属性和属性值并放到数组中\n              property: rule.property,\n              value: rule.value.join(' '),\n              indent: rule.indent\n            })\n            return rules\n          }, []),\n          indent: node.indent\n        })\n      }\n    }\n    // 遍历根节点的children数组\n    for (let i = 0; i < node.children.length; i++) {\n      traverse(node.children[i], styles, selectorChain)\n    }\n  }\n  traverse(ast, styles, [])\n  return styles\n}\nfunction generate (styles) {\n  return styles.map(style => { // 遍历每一条样式\n    const rules = style.rules.reduce((rules, rule) => { // 将当前样式的所有rules合并起来\n      // eslint-disable-next-line no-return-assign\n      return rules += `\\n${' '.repeat(rule.indent)}${rule.property}:${rule.value};`\n    }, '')\n    return `${' '.repeat(style.indent)}${style.selector} {${rules}}`\n  }).join('\\n')\n}\nexport default cssParse\n","import vnode from './src/core/vnode'\nimport getHashCode from './src/util/hash'\nimport cssParse from './src/core/css'\n\nconst appEl = document.getElementById('groove-app')\nclass Groove {\n  constructor (root, vnode) {\n    if (Groove.instance) {\n      return Groove.instance\n    } else {\n      Groove.instance = this\n    }\n    this.root = root\n    this.vnode = vnode\n  }\n\n  patch (ast) {\n    if (ast.type === 2) {\n      return { type: 'text', text: ast.text }\n    }\n    const el = document.createElement(ast.tag)\n    for (const attrs of ast.attrsList) {\n      el.setAttribute(attrs.name, attrs.value)\n    }\n    el.setAttribute(`data-g-${ast.hashCode}`, '')\n    if (ast.children) {\n      for (const child of ast.children) {\n        const childEl = this.patch(child)\n        if (childEl.type === 'node') {\n          el.appendChild(childEl.el)\n        } else {\n          el.textContent = childEl.text\n        }\n      }\n    }\n    return { type: 'node', el }\n  }\n\n  patchCss (cssDom) {\n    const style1 = document.createElement('style')\n    style1.innerHTML = cssDom\n    document.head.appendChild(style1)\n  }\n\n  render (htmlString, cssString) {\n    const hashCode = getHashCode()\n    const ast = vnode(htmlString, hashCode)\n    const el = this.patch(ast)\n    this.root.appendChild(el.el)\n\n    const cssDom = cssParse(cssString, hashCode)\n    console.log(cssDom)\n    this.patchCss(cssDom)\n  }\n}\n\nconst groove = new Groove(appEl, vnode)\n\nconst css = `\n.page{\n  height:100vh;\n  display:flex;\n  align-items:center;\n  justify-content: center;\n  text-align: center;\n  .text-strong{\n    height:85px;\n    font-size: 50px;\n    text-weight: 1600;\n    background-image: -webkit-linear-gradient(bottom, blue, #fd8403, yellow); \n    -webkit-background-clip: text; \n    -webkit-text-fill-color: transparent;\n  }\n}\n`\ngroove.render('<div class=\"page\"><span class=\"text-strong\">hello world , grooveJs</span></div>', css)\n"],"names":["unicodeRegExp","ncname","source","commentReg","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","dynamicArgAttribute","attribute","conditionalComment","reCache","isPlainTextElement","makeMap","str","expectsLowerCase","map","Object","create","list","split","i","length","val","toLowerCase","createASTElement","tag","attrs","parent","type","attrsList","rawAttrsMap","children","vnode","html","hashCode","currentParent","root","stack","closeElement","element","push","start","unary","end","chars","text","child","expression","tokens","comment","isComment","parse","options","lastTag","index","textEnd","indexOf","test","commentEnd","substring","advance","endTagMatch","match","curIndex","parseEndTag","startTagMatch","parseStartTag","handleStartTag","rest","next","slice","endTagLength","stackedTag","reStackedTag","replace","all","console","log","n","tagName","pos","lowerCasedTagName","lowerCasedTag","attr","unarySlash","l","Array","args","value","name","h","len","t","charCodeAt","randomWord","randomFlag","min","max","range","arr","Math","round","random","getHashCode","timestamp","Date","valueOf","myRandom","hashcode","toString","tokenize","cssString","lines","trim","reduce","line","spaces","indent","input","words","firstWord","shift","selectorReg","result","values","cssParse","ast","rules","path","parentNode","token","variableDict","variableValueToken","selectorNode","pop","property","generate","transform","styles","traverse","node","selectorChain","selector","join","rule","style","repeat","appEl","document","getElementById","Groove","constructor","instance","patch","el","createElement","setAttribute","childEl","appendChild","textContent","patchCss","cssDom","style1","innerHTML","head","render","htmlString","groove","css"],"mappings":"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"}